{"ast":null,"code":"/*!\n * jsPOS\n *\n * Copyright 2010, Percy Wegmann\n * Licensed under the GNU LGPLv3 license\n * http://www.opensource.org/licenses/lgpl-3.0.html\n */\n\nmodule.exports = Lexer;\nvar re = {\n  ids: /(?:^|\\s)[a-z0-9-]{8,45}(?:$|\\s)/ig,\n  // ID, CRC, UUID's\n  number: /[0-9]*\\.[0-9]+|[0-9]+/ig,\n  space: /\\s+/ig,\n  unblank: /\\S/,\n  email: /[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](?:\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](?:-?\\.?[a-zA-Z0-9])*(?:\\.[a-zA-Z](?:-?[a-zA-Z0-9])*)+/gi,\n  urls: /(?:https?:\\/\\/)(?:[\\da-z\\.-]+)\\.(?:[a-z\\.]{2,6})(?:[\\/\\w\\.\\-\\?#=]*)*\\/?/ig,\n  punctuation: /[\\/\\.\\,\\?\\!\\\"\\'\\:\\;\\$\\(\\)\\#]/ig,\n  time: /(?:[0-9]|0[0-9]|1[0-9]|2[0-3]):(?:[0-5][0-9])\\s?(?:[aApP][mM])/ig\n};\nfunction LexerNode(string, regex, regexs) {\n  string = string.trim();\n  this.string = string;\n  this.children = [];\n  if (string) {\n    this.matches = string.match(regex);\n    var childElements = string.split(regex);\n  }\n  if (!this.matches) {\n    this.matches = [];\n    var childElements = [string];\n  }\n  if (!regexs.length) {\n    // no more regular expressions, we're done\n    this.children = childElements;\n  } else {\n    // descend recursively\n    var nextRegex = regexs[0],\n      nextRegexes = regexs.slice(1);\n    for (var i in childElements) {\n      if (childElements.hasOwnProperty(i)) {\n        this.children.push(new LexerNode(childElements[i], nextRegex, nextRegexes));\n      }\n    }\n  }\n}\nLexerNode.prototype.fillArray = function (array) {\n  for (var i in this.children) {\n    if (this.children.hasOwnProperty(i)) {\n      var child = this.children[i];\n      if (child.fillArray) {\n        child.fillArray(array);\n      } else if (re.unblank.test(child)) {\n        array.push(child.trim());\n      }\n      if (i < this.matches.length) {\n        var match = this.matches[i];\n        if (re.unblank.test(match)) array.push(match.trim());\n      }\n    }\n  }\n};\nLexerNode.prototype.toString = function () {\n  var array = [];\n  this.fillArray(array);\n  return array.toString();\n};\nfunction Lexer() {\n  // URLS can contain IDS, so first urls, then ids\n  // then split by then numbers, then whitespace, then email and finally punctuation\n  // this.regexs = [re.urls, re.ids, re.number, re.space, re.email, re.punctuation];\n  this.regexs = [re.urls, re.ids, re.time, re.number, re.space, re.email, re.punctuation];\n}\nLexer.prototype.lex = function (string) {\n  var array = [],\n    node = new LexerNode(string, this.regexs[0], this.regexs.slice(1));\n  node.fillArray(array);\n  return array;\n};\n\n//var lexer = new Lexer();\n//print(lexer.lex(\"I made $5.60 today in 1 hour of work.  The E.M.T.'s were on time, but only barely.\").toString());","map":{"version":3,"names":["module","exports","Lexer","re","ids","number","space","unblank","email","urls","punctuation","time","LexerNode","string","regex","regexs","trim","children","matches","match","childElements","split","length","nextRegex","nextRegexes","slice","i","hasOwnProperty","push","prototype","fillArray","array","child","test","toString","lex","node"],"sources":["/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/node_modules/pos/lexer.js"],"sourcesContent":["/*!\n * jsPOS\n *\n * Copyright 2010, Percy Wegmann\n * Licensed under the GNU LGPLv3 license\n * http://www.opensource.org/licenses/lgpl-3.0.html\n */\n\nmodule.exports = Lexer;\n\nvar re = {\n  ids: /(?:^|\\s)[a-z0-9-]{8,45}(?:$|\\s)/ig, // ID, CRC, UUID's\n  number: /[0-9]*\\.[0-9]+|[0-9]+/ig,\n  space: /\\s+/ig,\n  unblank: /\\S/,\n  email: /[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](?:\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](?:-?\\.?[a-zA-Z0-9])*(?:\\.[a-zA-Z](?:-?[a-zA-Z0-9])*)+/gi,\n  urls: /(?:https?:\\/\\/)(?:[\\da-z\\.-]+)\\.(?:[a-z\\.]{2,6})(?:[\\/\\w\\.\\-\\?#=]*)*\\/?/ig,\n  punctuation: /[\\/\\.\\,\\?\\!\\\"\\'\\:\\;\\$\\(\\)\\#]/ig,\n  time: /(?:[0-9]|0[0-9]|1[0-9]|2[0-3]):(?:[0-5][0-9])\\s?(?:[aApP][mM])/ig\n}\n\nfunction LexerNode(string, regex, regexs){\n  string = string.trim();\n  this.string = string;\n  this.children = [];\n\n  if (string) {\n    this.matches = string.match(regex);\n    var childElements = string.split(regex);\n  }\n\n  if (!this.matches) {\n    this.matches = [];\n    var childElements = [string];\n  }\n\n  if (!regexs.length) {\n    // no more regular expressions, we're done\n    this.children = childElements;\n  } else {\n    // descend recursively\n    var nextRegex = regexs[0], nextRegexes = regexs.slice(1);\n\n    for (var i in childElements) {\n      if (childElements.hasOwnProperty(i)) {\n        this.children.push(\n          new LexerNode(childElements[i], nextRegex, nextRegexes));\n      }\n    }\n  }\n}\n\nLexerNode.prototype.fillArray = function(array){\n  for (var i in this.children) {\n    if (this.children.hasOwnProperty(i)) {\n      var child = this.children[i];\n\n      if (child.fillArray) {\n        child.fillArray(array);\n      } else if (re.unblank.test(child)) {\n        array.push(child.trim());\n      }\n\n      if (i < this.matches.length) {\n        var match = this.matches[i];\n        if (re.unblank.test(match))\n          array.push(match.trim());\n      }\n    }\n  }\n}\n\nLexerNode.prototype.toString = function(){\n  var array = [];\n  this.fillArray(array);\n  return array.toString();\n}\n\nfunction Lexer(){\n  // URLS can contain IDS, so first urls, then ids\n  // then split by then numbers, then whitespace, then email and finally punctuation\n  // this.regexs = [re.urls, re.ids, re.number, re.space, re.email, re.punctuation];\n  this.regexs = [\n    re.urls, re.ids, re.time, re.number, re.space, re.email, re.punctuation\n  ];\n}\n\nLexer.prototype.lex = function(string){\n  var array = []\n    , node = new LexerNode(string, this.regexs[0], this.regexs.slice(1));\n\n  node.fillArray(array);\n  return array;\n}\n\n//var lexer = new Lexer();\n//print(lexer.lex(\"I made $5.60 today in 1 hour of work.  The E.M.T.'s were on time, but only barely.\").toString());\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}