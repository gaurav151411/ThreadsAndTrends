{"ast":null,"code":"/*\n  Brill's POS Testing class\n  Copyright (C) 2017 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n'use strict';\n\nfunction BrillPOSTester() {}\nBrillPOSTester.prototype.test = function (corpus, tagger) {\n  let totalWords = 0;\n  let correctTagsLexicon = 0;\n  let correctTagsAfterRules = 0;\n\n  // Tag the corpus using the tagger\n  corpus.sentences.forEach(function (sentence) {\n    const s = sentence.taggedWords.map(function (token) {\n      return token.token;\n    });\n\n    // Use the lexicon to tag the sentence\n    const taggedSentence = tagger.tagWithLexicon(s);\n    // Count the right tags\n    sentence.taggedWords.forEach(function (token, i) {\n      totalWords++;\n      if (token.tag === taggedSentence.taggedWords[i].tag) {\n        correctTagsLexicon++;\n      }\n    });\n\n    // Use the rule set to tag the sentence\n    const taggedSentenceAfterRules = tagger.applyRules(taggedSentence);\n    // Count the right tags\n    sentence.taggedWords.forEach(function (token, i) {\n      if (token.tag === taggedSentenceAfterRules.taggedWords[i].tag) {\n        correctTagsAfterRules++;\n      }\n    });\n  });\n\n  // Return percentage right\n  return [100 * correctTagsLexicon / totalWords, 100 * correctTagsAfterRules / totalWords];\n};\nmodule.exports = BrillPOSTester;","map":{"version":3,"names":["BrillPOSTester","prototype","test","corpus","tagger","totalWords","correctTagsLexicon","correctTagsAfterRules","sentences","forEach","sentence","s","taggedWords","map","token","taggedSentence","tagWithLexicon","i","tag","taggedSentenceAfterRules","applyRules","module","exports"],"sources":["/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/node_modules/natural/lib/natural/brill_pos_tagger/lib/Brill_POS_Tester.js"],"sourcesContent":["/*\n  Brill's POS Testing class\n  Copyright (C) 2017 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n'use strict'\n\nfunction BrillPOSTester () {\n\n}\n\nBrillPOSTester.prototype.test = function (corpus, tagger) {\n  let totalWords = 0\n  let correctTagsLexicon = 0\n  let correctTagsAfterRules = 0\n\n  // Tag the corpus using the tagger\n  corpus.sentences.forEach(function (sentence) {\n    const s = sentence.taggedWords.map(function (token) {\n      return token.token\n    })\n\n    // Use the lexicon to tag the sentence\n    const taggedSentence = tagger.tagWithLexicon(s)\n    // Count the right tags\n    sentence.taggedWords.forEach(function (token, i) {\n      totalWords++\n      if (token.tag === taggedSentence.taggedWords[i].tag) {\n        correctTagsLexicon++\n      }\n    })\n\n    // Use the rule set to tag the sentence\n    const taggedSentenceAfterRules = tagger.applyRules(taggedSentence)\n    // Count the right tags\n    sentence.taggedWords.forEach(function (token, i) {\n      if (token.tag === taggedSentenceAfterRules.taggedWords[i].tag) {\n        correctTagsAfterRules++\n      }\n    })\n  })\n\n  // Return percentage right\n  return [100 * correctTagsLexicon / totalWords, 100 * correctTagsAfterRules / totalWords]\n}\n\nmodule.exports = BrillPOSTester\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,SAASA,cAAcA,CAAA,EAAI,CAE3B;AAEAA,cAAc,CAACC,SAAS,CAACC,IAAI,GAAG,UAAUC,MAAM,EAAEC,MAAM,EAAE;EACxD,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,kBAAkB,GAAG,CAAC;EAC1B,IAAIC,qBAAqB,GAAG,CAAC;;EAE7B;EACAJ,MAAM,CAACK,SAAS,CAACC,OAAO,CAAC,UAAUC,QAAQ,EAAE;IAC3C,MAAMC,CAAC,GAAGD,QAAQ,CAACE,WAAW,CAACC,GAAG,CAAC,UAAUC,KAAK,EAAE;MAClD,OAAOA,KAAK,CAACA,KAAK;IACpB,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAc,GAAGX,MAAM,CAACY,cAAc,CAACL,CAAC,CAAC;IAC/C;IACAD,QAAQ,CAACE,WAAW,CAACH,OAAO,CAAC,UAAUK,KAAK,EAAEG,CAAC,EAAE;MAC/CZ,UAAU,EAAE;MACZ,IAAIS,KAAK,CAACI,GAAG,KAAKH,cAAc,CAACH,WAAW,CAACK,CAAC,CAAC,CAACC,GAAG,EAAE;QACnDZ,kBAAkB,EAAE;MACtB;IACF,CAAC,CAAC;;IAEF;IACA,MAAMa,wBAAwB,GAAGf,MAAM,CAACgB,UAAU,CAACL,cAAc,CAAC;IAClE;IACAL,QAAQ,CAACE,WAAW,CAACH,OAAO,CAAC,UAAUK,KAAK,EAAEG,CAAC,EAAE;MAC/C,IAAIH,KAAK,CAACI,GAAG,KAAKC,wBAAwB,CAACP,WAAW,CAACK,CAAC,CAAC,CAACC,GAAG,EAAE;QAC7DX,qBAAqB,EAAE;MACzB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,OAAO,CAAC,GAAG,GAAGD,kBAAkB,GAAGD,UAAU,EAAE,GAAG,GAAGE,qBAAqB,GAAGF,UAAU,CAAC;AAC1F,CAAC;AAEDgB,MAAM,CAACC,OAAO,GAAGtB,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}