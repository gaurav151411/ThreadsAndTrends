{"ast":null,"code":"var _jsxFileName = \"/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/src/Components/AutoTyping.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport CharacterImage from '../Generate_an_ani_1-removebg-preview.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AutoTypingTextAnimation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      strings: [],\n      currentStringIndex: 0,\n      currentString: '',\n      currentCharIndex: 0,\n      typingInterval: null\n    };\n    this.startTyping = string => {\n      this.clearTypingInterval();\n      const typingInterval = setInterval(this.typeCharacter, 100); // Adjust the delay here\n      this.setState({\n        currentString: string,\n        currentCharIndex: 0,\n        typingInterval\n      });\n    };\n    this.clearTypingInterval = () => {\n      clearInterval(this.state.typingInterval);\n    };\n    this.typeCharacter = () => {\n      const {\n        currentString,\n        currentCharIndex,\n        strings,\n        currentStringIndex\n      } = this.state;\n      if (currentCharIndex < currentString.length) {\n        this.setState({\n          currentCharIndex: currentCharIndex + 1\n        });\n      } else {\n        const nextStringIndex = (currentStringIndex + 1) % strings.length;\n        this.setState({\n          currentStringIndex: nextStringIndex\n        });\n        this.startTyping(strings[nextStringIndex]);\n      }\n    };\n  }\n  componentDidMount() {\n    const {\n      strings\n    } = this.props;\n    this.setState({\n      strings\n    });\n    this.startTyping(strings[0]);\n  }\n  componentWillUnmount() {\n    this.clearTypingInterval();\n  }\n  render() {\n    const {\n      currentString,\n      currentCharIndex\n    } = this.state;\n    const words = currentString.split(' ');\n    const lines = [];\n    let currentLine = '';\n    for (const word of words) {\n      if ((currentLine + word).length > 30) {\n        lines.push(currentLine);\n        currentLine = '';\n      }\n      currentLine += (currentLine ? ' ' : '') + word;\n    }\n    if (currentLine.length > 0) {\n      lines.push(currentLine);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stylist\",\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-typing-text-animation\",\n        style: {\n          fontSize: '40px',\n          marginLeft: \"20px\"\n        },\n        children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: line.substring(0, currentCharIndex)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Stylistinchief\",\n          style: {\n            marginLeft: \"8em\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/bot\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: CharacterImage,\n              style: {\n                marginTop: \"8em\",\n                position: \"relative\"\n              },\n              alt: \"Character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"-40em\",\n              marginLeft: \"-30em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: \"I am your Stylist in Chief, Let's talk!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AutoTypingTextAnimation;","map":{"version":3,"names":["React","Component","Link","CharacterImage","jsxDEV","_jsxDEV","AutoTypingTextAnimation","constructor","args","state","strings","currentStringIndex","currentString","currentCharIndex","typingInterval","startTyping","string","clearTypingInterval","setInterval","typeCharacter","setState","clearInterval","length","nextStringIndex","componentDidMount","props","componentWillUnmount","render","words","split","lines","currentLine","word","push","className","style","position","children","fontSize","marginLeft","map","line","index","substring","fileName","_jsxFileName","lineNumber","columnNumber","to","src","marginTop","alt"],"sources":["/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/src/Components/AutoTyping.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport CharacterImage from '../Generate_an_ani_1-removebg-preview.png';\nclass AutoTypingTextAnimation extends Component {\n  state = {\n    strings: [],\n    currentStringIndex: 0,\n    currentString: '',\n    currentCharIndex: 0,\n    typingInterval: null,\n  };\n\n  componentDidMount() {\n    const { strings } = this.props;\n    this.setState({ strings });\n    this.startTyping(strings[0]);\n  }\n\n  componentWillUnmount() {\n    this.clearTypingInterval();\n  }\n\n  startTyping = (string) => {\n    this.clearTypingInterval();\n    const typingInterval = setInterval(this.typeCharacter, 100); // Adjust the delay here\n    this.setState({\n      currentString: string,\n      currentCharIndex: 0,\n      typingInterval,\n    });\n  };\n\n  clearTypingInterval = () => {\n    clearInterval(this.state.typingInterval);\n  };\n\n  typeCharacter = () => {\n    const { currentString, currentCharIndex, strings, currentStringIndex } = this.state;\n\n    if (currentCharIndex < currentString.length) {\n      this.setState({ currentCharIndex: currentCharIndex + 1 });\n    } else {\n      const nextStringIndex = (currentStringIndex + 1) % strings.length;\n      this.setState({ currentStringIndex: nextStringIndex });\n      this.startTyping(strings[nextStringIndex]);\n    }\n  };\n\n  render() {\n    const { currentString, currentCharIndex } = this.state;\n    const words = currentString.split(' ');\n    \n    const lines = [];\n    let currentLine = '';\n\n    for (const word of words) {\n      if ((currentLine + word).length > 30) {\n        lines.push(currentLine);\n        currentLine = '';\n      }\n      currentLine += (currentLine ? ' ' : '') + word;\n    }\n    if (currentLine.length > 0) {\n      lines.push(currentLine);\n    }\n\n    return (\n      <div className='stylist' style={{position:\"relative\"}}>\n      <div className=\"auto-typing-text-animation\" style={{ fontSize: '40px',marginLeft:\"20px\"}}>\n        {lines.map((line, index) => (\n          <div key={index}>{line.substring(0, currentCharIndex)}</div>\n        ))}\n      </div>\n      <div>\n        <div className=\"Stylistinchief\" style={{marginLeft:\"8em\",position:\"relative\"}}>\n                <Link to=\"/bot\">\n                    <img src={CharacterImage} style={{marginTop:\"8em\",position:\"relative\"}} alt=\"Character\" />\n                </Link>\n                <div style={{marginTop:\"-40em\", marginLeft:\"-30em\"}}>\n                    <div className=\"bubble\">I am your Stylist in Chief, Let's talk!!</div>\n                    <div className=\"pointer\"></div>\n                </div>\n               \n            </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default AutoTypingTextAnimation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}