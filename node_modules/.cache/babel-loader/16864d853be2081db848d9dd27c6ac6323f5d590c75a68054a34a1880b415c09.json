{"ast":null,"code":"var _jsxFileName = \"/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/src/Components/AutoTypingtext.js\";\nimport React, { Component } from 'react';\nimport '../AutoTypingText.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AutoTypingText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      typedText: ''\n    };\n  }\n  componentDidMount() {\n    const {\n      text\n    } = this.props;\n    let currentIndex = 0;\n    this.typingInterval = setInterval(() => {\n      if (currentIndex < text.length) {\n        this.setState(prevState => ({\n          typedText: prevState.typedText + text[currentIndex]\n        }));\n        currentIndex++;\n      } else {\n        clearInterval(this.typingInterval);\n      }\n    }, 50);\n  }\n  componentWillUnmount() {\n    clearInterval(this.typingInterval);\n  }\n  render() {\n    const {\n      typedText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-typing-text\",\n      children: typedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AutoTypingText;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","AutoTypingText","constructor","props","state","typedText","componentDidMount","text","currentIndex","typingInterval","setInterval","length","setState","prevState","clearInterval","componentWillUnmount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/src/Components/AutoTypingtext.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../AutoTypingText.css';\n\nclass AutoTypingText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      typedText: '',\n    };\n  }\n\n  componentDidMount() {\n    const { text } = this.props;\n    let currentIndex = 0;\n    \n    this.typingInterval = setInterval(() => {\n      if (currentIndex < text.length) {\n        this.setState(prevState => ({\n          typedText: prevState.typedText + text[currentIndex],\n        }));\n        currentIndex++;\n      } else {\n        clearInterval(this.typingInterval);\n      }\n    }, 50);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.typingInterval);\n  }\n\n  render() {\n    const { typedText } = this.state;\n\n    return (\n      <div className=\"auto-typing-text\">\n        {typedText}\n      </div>\n    );\n  }\n}\n\nexport default AutoTypingText;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,SAASH,SAAS,CAAC;EACrCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE;IACb,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAAEC;IAAK,CAAC,GAAG,IAAI,CAACJ,KAAK;IAC3B,IAAIK,YAAY,GAAG,CAAC;IAEpB,IAAI,CAACC,cAAc,GAAGC,WAAW,CAAC,MAAM;MACtC,IAAIF,YAAY,GAAGD,IAAI,CAACI,MAAM,EAAE;QAC9B,IAAI,CAACC,QAAQ,CAACC,SAAS,KAAK;UAC1BR,SAAS,EAAEQ,SAAS,CAACR,SAAS,GAAGE,IAAI,CAACC,YAAY;QACpD,CAAC,CAAC,CAAC;QACHA,YAAY,EAAE;MAChB,CAAC,MAAM;QACLM,aAAa,CAAC,IAAI,CAACL,cAAc,CAAC;MACpC;IACF,CAAC,EAAE,EAAE,CAAC;EACR;EAEAM,oBAAoBA,CAAA,EAAG;IACrBD,aAAa,CAAC,IAAI,CAACL,cAAc,CAAC;EACpC;EAEAO,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEX;IAAU,CAAC,GAAG,IAAI,CAACD,KAAK;IAEhC,oBACEJ,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9Bb;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV;AACF;AAEA,eAAerB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}