{"ast":null,"code":"/*\nCopyright (c) 2015, Luís Rodrigues\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict';\n\nmodule.exports = function () {\n  /**\n   * Stemmer token constructor.\n   *\n   * @param {String} string Token string.\n   */\n  const Token = function (string) {\n    this.vowels = '';\n    this.regions = {};\n    this.string = string;\n    this.original = string;\n  };\n\n  /**\n   * Set vowels.\n   *\n   * @param  {String|Array} vowels List of vowels.\n   * @return {Token}               Token instance.\n   */\n  Token.prototype.usingVowels = function (vowels) {\n    this.vowels = vowels;\n    return this;\n  };\n\n  /**\n   * Marks a region by defining its starting index or providing a callback\n   * function that does.\n   *\n   * @param  {String}       region   Region name.\n   * @param  {Array|Number} args     Callback arguments or region start index.\n   * @param  {Function}     callback Function that determines the start index (optional).\n   * @param  {Object}       context  Callback context (optional, defaults to this).\n   * @return {Token}                 Token instance.\n   */\n  Token.prototype.markRegion = function (region, args, callback, context) {\n    if (typeof callback === 'function') {\n      this.regions[region] = callback.apply(context || this, [].concat(args));\n    } else if (!isNaN(args)) {\n      this.regions[region] = args;\n    }\n    return this;\n  };\n\n  /**\n   * Replaces all instances of a string with another.\n   *\n   * @param  {String} find    String to be replaced.\n   * @param  {String} replace Replacement string.\n   * @return {Token}          Token instance.\n   */\n  Token.prototype.replaceAll = function (find, replace) {\n    this.string = this.string.split(find).join(replace);\n    return this;\n  };\n\n  /**\n   * Replaces the token suffix if in a region.\n   *\n   * @param  {String} suffix  Suffix to replace.\n   * @param  {String} replace Replacement string.\n   * @param  {String} region  Region name.\n   * @return {Token}          Token instance.\n   */\n  Token.prototype.replaceSuffixInRegion = function (suffix, replace, region) {\n    const suffixes = [].concat(suffix);\n    for (let i = 0; i < suffixes.length; i++) {\n      if (this.hasSuffixInRegion(suffixes[i], region)) {\n        this.string = this.string.slice(0, -suffixes[i].length) + replace;\n        return this;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Determines whether the token has a vowel at the provided index.\n   *\n   * @param  {Integer} index Character index.\n   * @return {Boolean}       Whether the token has a vowel at the provided index.\n   */\n  Token.prototype.hasVowelAtIndex = function (index) {\n    return this.vowels.indexOf(this.string[index]) !== -1;\n  };\n\n  /**\n   * Finds the next vowel in the token.\n   *\n   * @param  {Integer} start Starting index offset.\n   * @return {Integer}       Vowel index, or the end of the string.\n   */\n  Token.prototype.nextVowelIndex = function (start) {\n    let index = start >= 0 && start < this.string.length ? start : this.string.length;\n    while (index < this.string.length && !this.hasVowelAtIndex(index)) {\n      index++;\n    }\n    return index;\n  };\n\n  /**\n   * Finds the next consonant in the token.\n   *\n   * @param  {Integer} start Starting index offset.\n   * @return {Integer}       Consonant index, or the end of the string.\n   */\n  Token.prototype.nextConsonantIndex = function (start) {\n    let index = start >= 0 && start < this.string.length ? start : this.string.length;\n    while (index < this.string.length && this.hasVowelAtIndex(index)) {\n      index++;\n    }\n    return index;\n  };\n\n  /**\n   * Determines whether the token has the provided suffix.\n   * @param  {String}  suffix Suffix to match.\n   * @return {Boolean}        Whether the token string ends in suffix.\n   */\n  Token.prototype.hasSuffix = function (suffix) {\n    return this.string.slice(-suffix.length) === suffix;\n  };\n\n  /**\n   * Determines whether the token has the provided suffix within the specified\n   * region.\n   *\n   * @param {String} suffix Suffix to match.\n   * @param {String} region Region name.\n   * @return {Boolean} Whether the token string ends in suffix.\n   */\n  Token.prototype.hasSuffixInRegion = function (suffix, region) {\n    const regionStart = this.regions[region] || 0;\n    const suffixStart = this.string.length - suffix.length;\n    return this.hasSuffix(suffix) && suffixStart >= regionStart;\n  };\n  return Token;\n}();","map":{"version":3,"names":["module","exports","Token","string","vowels","regions","original","prototype","usingVowels","markRegion","region","args","callback","context","apply","concat","isNaN","replaceAll","find","replace","split","join","replaceSuffixInRegion","suffix","suffixes","i","length","hasSuffixInRegion","slice","hasVowelAtIndex","index","indexOf","nextVowelIndex","start","nextConsonantIndex","hasSuffix","regionStart","suffixStart"],"sources":["/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/node_modules/natural/lib/natural/stemmers/token.js"],"sourcesContent":["/*\nCopyright (c) 2015, Luís Rodrigues\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict'\n\nmodule.exports = (function () {\n  /**\n   * Stemmer token constructor.\n   *\n   * @param {String} string Token string.\n   */\n  const Token = function (string) {\n    this.vowels = ''\n    this.regions = {}\n    this.string = string\n    this.original = string\n  }\n\n  /**\n   * Set vowels.\n   *\n   * @param  {String|Array} vowels List of vowels.\n   * @return {Token}               Token instance.\n   */\n  Token.prototype.usingVowels = function (vowels) {\n    this.vowels = vowels\n    return this\n  }\n\n  /**\n   * Marks a region by defining its starting index or providing a callback\n   * function that does.\n   *\n   * @param  {String}       region   Region name.\n   * @param  {Array|Number} args     Callback arguments or region start index.\n   * @param  {Function}     callback Function that determines the start index (optional).\n   * @param  {Object}       context  Callback context (optional, defaults to this).\n   * @return {Token}                 Token instance.\n   */\n  Token.prototype.markRegion = function (region, args, callback, context) {\n    if (typeof callback === 'function') {\n      this.regions[region] = callback.apply(context || this, [].concat(args))\n    } else if (!isNaN(args)) {\n      this.regions[region] = args\n    }\n\n    return this\n  }\n\n  /**\n   * Replaces all instances of a string with another.\n   *\n   * @param  {String} find    String to be replaced.\n   * @param  {String} replace Replacement string.\n   * @return {Token}          Token instance.\n   */\n  Token.prototype.replaceAll = function (find, replace) {\n    this.string = this.string.split(find).join(replace)\n    return this\n  }\n\n  /**\n   * Replaces the token suffix if in a region.\n   *\n   * @param  {String} suffix  Suffix to replace.\n   * @param  {String} replace Replacement string.\n   * @param  {String} region  Region name.\n   * @return {Token}          Token instance.\n   */\n  Token.prototype.replaceSuffixInRegion = function (suffix, replace, region) {\n    const suffixes = [].concat(suffix)\n    for (let i = 0; i < suffixes.length; i++) {\n      if (this.hasSuffixInRegion(suffixes[i], region)) {\n        this.string = this.string.slice(0, -suffixes[i].length) + replace\n        return this\n      }\n    }\n    return this\n  }\n\n  /**\n   * Determines whether the token has a vowel at the provided index.\n   *\n   * @param  {Integer} index Character index.\n   * @return {Boolean}       Whether the token has a vowel at the provided index.\n   */\n  Token.prototype.hasVowelAtIndex = function (index) {\n    return this.vowels.indexOf(this.string[index]) !== -1\n  }\n\n  /**\n   * Finds the next vowel in the token.\n   *\n   * @param  {Integer} start Starting index offset.\n   * @return {Integer}       Vowel index, or the end of the string.\n   */\n  Token.prototype.nextVowelIndex = function (start) {\n    let index = (start >= 0 && start < this.string.length) ? start : this.string.length\n    while (index < this.string.length && !this.hasVowelAtIndex(index)) {\n      index++\n    }\n    return index\n  }\n\n  /**\n   * Finds the next consonant in the token.\n   *\n   * @param  {Integer} start Starting index offset.\n   * @return {Integer}       Consonant index, or the end of the string.\n   */\n  Token.prototype.nextConsonantIndex = function (start) {\n    let index = (start >= 0 && start < this.string.length) ? start : this.string.length\n    while (index < this.string.length && this.hasVowelAtIndex(index)) {\n      index++\n    }\n    return index\n  }\n\n  /**\n   * Determines whether the token has the provided suffix.\n   * @param  {String}  suffix Suffix to match.\n   * @return {Boolean}        Whether the token string ends in suffix.\n   */\n  Token.prototype.hasSuffix = function (suffix) {\n    return this.string.slice(-suffix.length) === suffix\n  }\n\n  /**\n   * Determines whether the token has the provided suffix within the specified\n   * region.\n   *\n   * @param {String} suffix Suffix to match.\n   * @param {String} region Region name.\n   * @return {Boolean} Whether the token string ends in suffix.\n   */\n  Token.prototype.hasSuffixInRegion = function (suffix, region) {\n    const regionStart = this.regions[region] || 0\n    const suffixStart = this.string.length - suffix.length\n    return this.hasSuffix(suffix) && suffixStart >= regionStart\n  }\n\n  return Token\n})()\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}