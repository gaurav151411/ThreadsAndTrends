{"ast":null,"code":"/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict';\n\nconst Phonetic = require('./phonetic');\nconst DoubleMetaphone = new Phonetic();\nmodule.exports = DoubleMetaphone;\nfunction isVowel(c) {\n  return c && c.match(/[aeiouy]/i);\n}\nfunction truncate(string, length) {\n  if (string.length >= length) {\n    string = string.substring(0, length);\n  }\n  return string;\n}\nfunction process(token, maxLength) {\n  token = token.toUpperCase();\n  let primary = '';\n  let secondary = '';\n  let pos = 0;\n  maxLength = maxLength || 32;\n  function subMatch(startOffset, stopOffset, terms) {\n    return subMatchAbsolute(pos + startOffset, pos + stopOffset, terms);\n  }\n  function subMatchAbsolute(startOffset, stopOffset, terms) {\n    return terms.indexOf(token.substring(startOffset, stopOffset)) > -1;\n  }\n  function addSecondary(primaryAppendage, secondaryAppendage) {\n    primary += primaryAppendage;\n    secondary += secondaryAppendage;\n  }\n  function add(primaryAppendage) {\n    addSecondary(primaryAppendage, primaryAppendage);\n  }\n  function addCompressedDouble(c, encoded) {\n    if (token[pos + 1] === c) {\n      pos++;\n    }\n    add(encoded || c);\n  }\n  function handleC() {\n    if (pos >= 1 && !isVowel(token[pos - 2]) && token[pos - 1] === 'A' && token[pos + 1] === 'H' && token[pos + 2] !== 'I' || subMatch(-2, 4, ['BACHER', 'MACHER'])) {\n      add('K');\n      pos++;\n    } else if (pos === 0 && token.substring(1, 6) === 'EASAR') {\n      add('S');\n      add('S');\n      add('R');\n      pos += 6;\n    } else if (token.substring(pos + 1, pos + 4) === 'HIA') {\n      add('K');\n      pos++;\n    } else if (token[pos + 1] === 'H') {\n      if (pos > 0 && token.substring(pos + 2, pos + 4) === 'AE') {\n        addSecondary('K', 'X');\n        pos++;\n      } else if (pos === 0 && (subMatch(1, 6, ['HARAC', 'HARIS']) || subMatch(1, 4, ['HOR', 'HUM', 'HIA', 'HEM'])) && token.substring(pos + 1, pos + 5) !== 'HORE') {\n        add('K');\n        pos++;\n      } else {\n        if (subMatchAbsolute(0, 3, ['VAN', 'VON']) || token.substring(0, 3) === 'SCH' || subMatch(-2, 4, ['ORCHES', 'ARCHIT', 'ORCHID']) || subMatch(2, 3, ['T', 'S']) || (subMatch(-1, 0, ['A', 'O', 'U', 'E']) || pos === 0) && subMatch(2, 3, ['B', 'F', 'H', 'L', 'M', 'N', 'R', 'V', 'W'])) {\n          add('K');\n        } else if (pos > 0) {\n          if (token.substring(0, 2) === 'MC') {\n            add('K');\n          } else {\n            addSecondary('X', 'K');\n          }\n        } else {\n          add('X');\n        }\n        pos++;\n      }\n    } else if (token.substring(pos, pos + 2) === 'CZ' && token.substring(pos - 2, pos + 1) !== 'WICZ') {\n      addSecondary('S', 'X');\n      pos++;\n    } else if (token.substring(pos, pos + 3) === 'CIA') {\n      add('X');\n      pos += 2;\n    } else if (token[pos + 1] === 'C' && pos !== 1 && token[0] !== 'M') {\n      if (['I', 'E', 'H'].indexOf(token[pos + 2]) > -1 && token.substring(pos + 2, pos + 4) !== 'HU') {\n        if (pos === 1 && token[pos - 1] === 'A' || subMatch(-1, 4, ['UCCEE', 'UCCES'])) {\n          add('KS');\n        } else {\n          add('X');\n        }\n        pos += 2;\n      } else {\n        add('K');\n        pos++;\n      }\n    } else if (['K', 'G', 'Q'].indexOf(token[pos + 1]) > -1) {\n      add('K');\n      pos++;\n    } else if (['E', 'I', 'Y'].indexOf(token[pos + 1]) > -1) {\n      if (subMatch(1, 3, ['IA', 'IE', 'IO'])) {\n        addSecondary('S', 'X');\n      } else {\n        add('S');\n      }\n      pos++;\n    } else {\n      add('K');\n      if (token[pos + 1] === ' ' && ['C', 'Q', 'G'].indexOf(token[pos + 2])) {\n        pos += 2;\n      } else if (['C', 'K', 'Q'].indexOf(token[pos + 1]) > -1 && !subMatch(1, 3, ['CE', 'CI'])) {\n        pos++;\n      }\n    }\n  }\n  function handleD() {\n    if (token[pos + 1] === 'G') {\n      if (['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1) {\n        add('J');\n        pos += 2;\n      } else {\n        add('TK');\n        pos++;\n      }\n    } else if (token[pos + 1] === 'T') {\n      add('T');\n      pos++;\n    } else {\n      addCompressedDouble('D', 'T');\n    }\n  }\n  function handleG() {\n    if (token[pos + 1] === 'H') {\n      if (pos > 0 && !isVowel(token[pos - 1])) {\n        add('K');\n        pos++;\n      } else if (pos === 0) {\n        if (token[pos + 2] === 'I') {\n          add('J');\n        } else {\n          add('K');\n        }\n        pos++;\n      } else if (pos > 1 && (['B', 'H', 'D'].indexOf(token[pos - 2]) > -1 || ['B', 'H', 'D'].indexOf(token[pos - 3]) > -1 || ['B', 'H'].indexOf(token[pos - 4]) > -1)) {\n        pos++;\n      } else {\n        if (pos > 2 && token[pos - 1] === 'U' && ['C', 'G', 'L', 'R', 'T'].indexOf(token[pos - 3]) > -1) {\n          add('F');\n        } else if (token[pos - 1] !== 'I') {\n          add('K');\n        }\n        pos++;\n      }\n    } else if (token[pos + 1] === 'N') {\n      if (pos === 1 && startsWithVowel && !slavoGermanic) {\n        addSecondary('KN', 'N');\n      } else {\n        if (token.substring(pos + 2, pos + 4) !== 'EY' && token[pos + 1] !== 'Y' && !slavoGermanic) {\n          addSecondary('N', 'KN');\n        } else {\n          add('KN');\n        }\n      }\n      pos++;\n    } else if (token.substring(pos + 1, pos + 3) === 'LI' && !slavoGermanic) {\n      addSecondary('KL', 'L');\n      pos++;\n    } else if (pos === 0 && (token[pos + 1] === 'Y' || subMatch(1, 3, ['ES', 'EP', 'EB', 'EL', 'EY', 'IB', 'IL', 'IN', 'IE', 'EI', 'ER']))) {\n      addSecondary('K', 'J');\n    } else {\n      addCompressedDouble('G', 'K');\n    }\n  }\n  function handleH() {\n    // keep if starts a word or is surrounded by vowels\n    if ((pos === 0 || isVowel(token[pos - 1])) && isVowel(token[pos + 1])) {\n      add('H');\n      pos++;\n    }\n  }\n  function handleJ() {\n    const jose = token.substring(pos + 1, pos + 4) === 'OSE';\n    if (san || jose) {\n      if (pos === 0 && token[pos + 4] === ' ' || san) {\n        add('H');\n      } else {\n        add('J', 'H');\n      }\n    } else {\n      if (pos === 0 /* && !jose */) {\n        addSecondary('J', 'A');\n      } else if (isVowel(token[pos - 1]) && !slavoGermanic && (token[pos + 1] === 'A' || token[pos + 1] === 'O')) {\n        addSecondary('J', 'H');\n      } else if (pos === token.length - 1) {\n        addSecondary('J', ' ');\n      } else {\n        addCompressedDouble('J');\n      }\n    }\n  }\n  function handleL() {\n    if (token[pos + 1] === 'L') {\n      if (pos === token.length - 3 && (subMatch(-1, 3, ['ILLO', 'ILLA', 'ALLE']) || token.substring(pos - 1, pos + 3) === 'ALLE' && (subMatch(-2, -1, ['AS', 'OS']) > -1 || ['A', 'O'].indexOf(token[token.length - 1]) > -1))) {\n        addSecondary('L', '');\n        pos++;\n        return;\n      }\n      pos++;\n    }\n    add('L');\n  }\n  function handleM() {\n    addCompressedDouble('M');\n    if (token[pos - 1] === 'U' && token[pos + 1] === 'B' && (pos === token.length - 2 || token.substring(pos + 2, pos + 4) === 'ER')) {\n      pos++;\n    }\n  }\n  function handleP() {\n    if (token[pos + 1] === 'H') {\n      add('F');\n      pos++;\n    } else {\n      addCompressedDouble('P');\n      if (token[pos + 1] === 'B') {\n        pos++;\n      }\n    }\n  }\n  function handleR() {\n    if (pos === token.length - 1 && !slavoGermanic && token.substring(pos - 2, pos) === 'IE' && !subMatch(-4, -3, ['ME', 'MA'])) {\n      addSecondary('', 'R');\n    } else {\n      addCompressedDouble('R');\n    }\n  }\n  function handleS() {\n    if (pos === 0 && token.substring(0, 5) === 'SUGAR') {\n      addSecondary('X', 'S');\n    } else if (token[pos + 1] === 'H') {\n      if (subMatch(2, 5, ['EIM', 'OEK', 'OLM', 'OLZ'])) {\n        add('S');\n      } else {\n        add('X');\n      }\n      pos++;\n    } else if (subMatch(1, 3, ['IO', 'IA'])) {\n      if (slavoGermanic) {\n        add('S');\n      } else {\n        addSecondary('S', 'X');\n      }\n      pos++;\n    } else if (pos === 0 && ['M', 'N', 'L', 'W'].indexOf(token[pos + 1]) > -1 || token[pos + 1] === 'Z') {\n      addSecondary('S', 'X');\n      if (token[pos + 1] === 'Z') {\n        pos++;\n      }\n    } else if (token.substring(pos, pos + 2) === 'SC') {\n      if (token[pos + 2] === 'H') {\n        if (subMatch(3, 5, ['ER', 'EN'])) {\n          addSecondary('X', 'SK');\n        } else if (subMatch(3, 5, ['OO', 'UY', 'ED', 'EM'])) {\n          add('SK');\n        } else if (pos === 0 && !isVowel(token[3]) && token[3] !== 'W') {\n          addSecondary('X', 'S');\n        } else {\n          add('X');\n        }\n      } else if (['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1) {\n        add('S');\n      } else {\n        add('SK');\n      }\n      pos += 2;\n    } else if (pos === token.length - 1 && subMatch(-2, 0, ['AI', 'OI'])) {\n      addSecondary('', 'S');\n    } else if (token[pos + 1] !== 'L' && token[pos - 1] !== 'A' && token[pos - 1] !== 'I') {\n      addCompressedDouble('S');\n      if (token[pos + 1] === 'Z') {\n        pos++;\n      }\n    }\n  }\n  function handleT() {\n    if (token.substring(pos + 1, pos + 4) === 'ION') {\n      add('XN');\n      pos += 3;\n    } else if (subMatch(1, 3, ['IA', 'CH'])) {\n      add('X');\n      pos += 2;\n    } else if (token[pos + 1] === 'H' || token.substring(1, 2) === 'TH') {\n      if (subMatch(2, 4, ['OM', 'AM']) || ['VAN ', 'VON '].indexOf(token.substring(0, 4)) > -1 || token.substring(0, 3) === 'SCH') {\n        add('T');\n      } else {\n        addSecondary('0', 'T');\n      }\n      pos++;\n    } else {\n      addCompressedDouble('T');\n      if (token[pos + 1] === 'D') {\n        pos++;\n      }\n    }\n  }\n  function handleX() {\n    if (pos === 0) {\n      add('S');\n    } else if (!(pos === token.length - 1 && (['IAU', 'EAU', 'IEU'].indexOf(token.substring(pos - 3, pos)) > -1 || ['AU', 'OU'].indexOf(token.substring(pos - 2, pos)) > -1))) {\n      add('KS');\n    }\n  }\n  function handleW() {\n    if (pos === 0) {\n      if (token[1] === 'H') {\n        add('A');\n      } else if (isVowel(token[1])) {\n        addSecondary('A', 'F');\n      }\n    } else if (subMatch(-1, 4, ['EWSKI', 'EWSKY', 'OWSKI', 'OWSKY']) || token.substring(0, 3) === 'SCH' || pos === token.length - 1 && isVowel(token[pos - 1])) {\n      addSecondary('', 'F');\n      pos++;\n    } else if (['ICZ', 'ITZ'].indexOf(token.substring(pos + 1, pos + 4)) > -1) {\n      addSecondary('TS', 'FX');\n      pos += 3;\n    }\n  }\n  function handleZ() {\n    if (token[pos + 1] === 'H') {\n      add('J');\n      pos++;\n    } else if (subMatch(1, 3, ['ZO', 'ZI', 'ZA']) || slavoGermanic && pos > 0 && token[pos - 1] !== 'T') {\n      addSecondary('S', 'TS');\n      pos++;\n    } else {\n      addCompressedDouble('Z', 'S');\n    }\n  }\n  const san = token.substring(0, 3) === 'SAN';\n  const startsWithVowel = isVowel(token[0]);\n  const slavoGermanic = token.match(/(W|K|CZ|WITZ)/);\n  if (subMatch(0, 2, ['GN', 'KN', 'PN', 'WR', 'PS'])) {\n    pos++;\n  }\n  while (pos < token.length) {\n    switch (token[pos]) {\n      case 'A':\n      case 'E':\n      case 'I':\n      case 'O':\n      case 'U':\n      case 'Y':\n      case 'Ê':\n      case 'É':\n      case 'À':\n        if (pos === 0) {\n          add('A');\n        }\n        break;\n      case 'B':\n        addCompressedDouble('B', 'P');\n        break;\n      case 'C':\n        handleC();\n        break;\n      case 'Ç':\n        add('S');\n        break;\n      case 'D':\n        handleD();\n        break;\n      case 'F':\n      case 'K':\n      case 'N':\n        addCompressedDouble(token[pos]);\n        break;\n      case 'G':\n        handleG();\n        break;\n      case 'H':\n        handleH();\n        break;\n      case 'J':\n        handleJ();\n        break;\n      case 'L':\n        handleL();\n        break;\n      case 'M':\n        handleM();\n        break;\n      case 'Ñ':\n        add('N');\n        break;\n      case 'P':\n        handleP();\n        break;\n      case 'Q':\n        addCompressedDouble('Q', 'K');\n        break;\n      case 'R':\n        handleR();\n        break;\n      case 'S':\n        handleS();\n        break;\n      case 'T':\n        handleT();\n        break;\n      case 'V':\n        addCompressedDouble('V', 'F');\n        break;\n      case 'W':\n        handleW();\n        break;\n      case 'X':\n        handleX();\n        break;\n      case 'Z':\n        handleZ();\n        break;\n    }\n    if (primary.length >= maxLength && secondary.length >= maxLength) {\n      break;\n    }\n    pos++;\n  }\n  return [truncate(primary, maxLength), truncate(secondary, maxLength)];\n}\nfunction compare(stringA, stringB) {\n  const encodingsA = process(stringA);\n  const encodingsB = process(stringB);\n  return encodingsA[0] === encodingsB[0] || encodingsA[1] === encodingsB[1];\n}\n;\nDoubleMetaphone.compare = compare;\nDoubleMetaphone.process = process;\nDoubleMetaphone.isVowel = isVowel;","map":{"version":3,"names":["Phonetic","require","DoubleMetaphone","module","exports","isVowel","c","match","truncate","string","length","substring","process","token","maxLength","toUpperCase","primary","secondary","pos","subMatch","startOffset","stopOffset","terms","subMatchAbsolute","indexOf","addSecondary","primaryAppendage","secondaryAppendage","add","addCompressedDouble","encoded","handleC","handleD","handleG","startsWithVowel","slavoGermanic","handleH","handleJ","jose","san","handleL","handleM","handleP","handleR","handleS","handleT","handleX","handleW","handleZ","compare","stringA","stringB","encodingsA","encodingsB"],"sources":["/Users/gauravsain/Desktop/PEPCODING/DEV/React/threadsandtrends/node_modules/natural/lib/natural/phonetics/double_metaphone.js"],"sourcesContent":["/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict'\n\nconst Phonetic = require('./phonetic')\n\nconst DoubleMetaphone = new Phonetic()\nmodule.exports = DoubleMetaphone\n\nfunction isVowel (c) {\n  return c && c.match(/[aeiouy]/i)\n}\n\nfunction truncate (string, length) {\n  if (string.length >= length) { string = string.substring(0, length) }\n\n  return string\n}\n\nfunction process (token, maxLength) {\n  token = token.toUpperCase()\n  let primary = ''; let secondary = ''\n  let pos = 0\n  maxLength = maxLength || 32\n\n  function subMatch (startOffset, stopOffset, terms) {\n    return subMatchAbsolute(pos + startOffset, pos + stopOffset, terms)\n  }\n\n  function subMatchAbsolute (startOffset, stopOffset, terms) {\n    return terms.indexOf(token.substring(startOffset, stopOffset)) > -1\n  }\n\n  function addSecondary (primaryAppendage, secondaryAppendage) {\n    primary += primaryAppendage\n    secondary += secondaryAppendage\n  }\n\n  function add (primaryAppendage) {\n    addSecondary(primaryAppendage, primaryAppendage)\n  }\n\n  function addCompressedDouble (c, encoded) {\n    if (token[pos + 1] === c) {\n      pos++\n    }\n    add(encoded || c)\n  }\n\n  function handleC () {\n    if ((pos >= 1 && !isVowel(token[pos - 2]) &&\n      token[pos - 1] === 'A' && token[pos + 1] === 'H' &&\n      token[pos + 2] !== 'I') ||\n      subMatch(-2, 4, ['BACHER', 'MACHER'])) {\n      add('K')\n      pos++\n    } else if (pos === 0 && token.substring(1, 6) === 'EASAR') {\n      add('S')\n      add('S')\n      add('R')\n      pos += 6\n    } else if (token.substring(pos + 1, pos + 4) === 'HIA') {\n      add('K')\n      pos++\n    } else if (token[pos + 1] === 'H') {\n      if (pos > 0 && token.substring(pos + 2, pos + 4) === 'AE') {\n        addSecondary('K', 'X')\n        pos++\n      } else if (pos === 0 &&\n                        (subMatch(1, 6, ['HARAC', 'HARIS']) ||\n                            subMatch(1, 4, ['HOR', 'HUM', 'HIA', 'HEM'])) &&\n                        token.substring(pos + 1, pos + 5) !== 'HORE') {\n        add('K')\n        pos++\n      } else {\n        if ((subMatchAbsolute(0, 3, ['VAN', 'VON']) || token.substring(0, 3) === 'SCH') ||\n                    subMatch(-2, 4, ['ORCHES', 'ARCHIT', 'ORCHID']) ||\n                    subMatch(2, 3, ['T', 'S']) ||\n                    ((subMatch(-1, 0, ['A', 'O', 'U', 'E']) || pos === 0) &&\n                        subMatch(2, 3, ['B', 'F', 'H', 'L', 'M', 'N', 'R', 'V', 'W']))) {\n          add('K')\n        } else if (pos > 0) {\n          if (token.substring(0, 2) === 'MC') {\n            add('K')\n          } else {\n            addSecondary('X', 'K')\n          }\n        } else {\n          add('X')\n        }\n\n        pos++\n      }\n    } else if (token.substring(pos, pos + 2) === 'CZ' &&\n                token.substring(pos - 2, pos + 1) !== 'WICZ') {\n      addSecondary('S', 'X')\n      pos++\n    } else if (token.substring(pos, pos + 3) === 'CIA') {\n      add('X')\n      pos += 2\n    } else if (token[pos + 1] === 'C' && pos !== 1 && token[0] !== 'M') {\n      if (['I', 'E', 'H'].indexOf(token[pos + 2]) > -1 &&\n                    token.substring(pos + 2, pos + 4) !== 'HU') {\n        if ((pos === 1 && token[pos - 1] === 'A') ||\n              subMatch(-1, 4, ['UCCEE', 'UCCES'])) {\n          add('KS')\n        } else {\n          add('X')\n        }\n\n        pos += 2\n      } else {\n        add('K')\n        pos++\n      }\n    } else if (['K', 'G', 'Q'].indexOf(token[pos + 1]) > -1) {\n      add('K')\n      pos++\n    } else if (['E', 'I', 'Y'].indexOf(token[pos + 1]) > -1) {\n      if (subMatch(1, 3, ['IA', 'IE', 'IO'])) {\n        addSecondary('S', 'X')\n      } else {\n        add('S')\n      }\n      pos++\n    } else {\n      add('K')\n      if (token[pos + 1] === ' ' && ['C', 'Q', 'G'].indexOf(token[pos + 2])) {\n        pos += 2\n      } else if (['C', 'K', 'Q'].indexOf(token[pos + 1]) > -1 &&\n                    !subMatch(1, 3, ['CE', 'CI'])) {\n        pos++\n      }\n    }\n  }\n\n  function handleD () {\n    if (token[pos + 1] === 'G') {\n      if (['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1) {\n        add('J')\n        pos += 2\n      } else {\n        add('TK')\n        pos++\n      }\n    } else if (token[pos + 1] === 'T') {\n      add('T')\n      pos++\n    } else { addCompressedDouble('D', 'T') }\n  }\n\n  function handleG () {\n    if (token[pos + 1] === 'H') {\n      if (pos > 0 && !isVowel(token[pos - 1])) {\n        add('K')\n        pos++\n      } else if (pos === 0) {\n        if (token[pos + 2] === 'I') {\n          add('J')\n        } else {\n          add('K')\n        }\n        pos++\n      } else if (pos > 1 &&\n                (['B', 'H', 'D'].indexOf(token[pos - 2]) > -1 ||\n                    ['B', 'H', 'D'].indexOf(token[pos - 3]) > -1 ||\n                    ['B', 'H'].indexOf(token[pos - 4]) > -1)) {\n        pos++\n      } else {\n        if (pos > 2 &&\n                        token[pos - 1] === 'U' &&\n                        ['C', 'G', 'L', 'R', 'T'].indexOf(token[pos - 3]) > -1) {\n          add('F')\n        } else if (token[pos - 1] !== 'I') {\n          add('K')\n        }\n\n        pos++\n      }\n    } else if (token[pos + 1] === 'N') {\n      if (pos === 1 && startsWithVowel && !slavoGermanic) {\n        addSecondary('KN', 'N')\n      } else {\n        if (token.substring(pos + 2, pos + 4) !== 'EY' &&\n                        (token[pos + 1] !== 'Y' &&\n                            !slavoGermanic)) {\n          addSecondary('N', 'KN')\n        } else { add('KN') }\n      }\n      pos++\n    } else if (token.substring(pos + 1, pos + 3) === 'LI' && !slavoGermanic) {\n      addSecondary('KL', 'L')\n      pos++\n    } else if (pos === 0 && (token[pos + 1] === 'Y' ||\n                subMatch(1, 3, ['ES', 'EP', 'EB', 'EL', 'EY', 'IB', 'IL', 'IN', 'IE', 'EI', 'ER']))) {\n      addSecondary('K', 'J')\n    } else {\n      addCompressedDouble('G', 'K')\n    }\n  }\n\n  function handleH () {\n    // keep if starts a word or is surrounded by vowels\n    if ((pos === 0 || isVowel(token[pos - 1])) && isVowel(token[pos + 1])) {\n      add('H')\n      pos++\n    }\n  }\n\n  function handleJ () {\n    const jose = (token.substring(pos + 1, pos + 4) === 'OSE')\n\n    if (san || jose) {\n      if ((pos === 0 && token[pos + 4] === ' ') ||\n                    san) {\n        add('H')\n      } else { add('J', 'H') }\n    } else {\n      if (pos === 0/* && !jose */) {\n        addSecondary('J', 'A')\n      } else if (isVowel(token[pos - 1]) && !slavoGermanic &&\n                    (token[pos + 1] === 'A' || token[pos + 1] === 'O')) {\n        addSecondary('J', 'H')\n      } else if (pos === token.length - 1) {\n        addSecondary('J', ' ')\n      } else { addCompressedDouble('J') }\n    }\n  }\n\n  function handleL () {\n    if (token[pos + 1] === 'L') {\n      if (pos === token.length - 3 && (\n        subMatch(-1, 3, ['ILLO', 'ILLA', 'ALLE']) || (\n          token.substring(pos - 1, pos + 3) === 'ALLE' &&\n          (subMatch(-2, -1, ['AS', 'OS']) > -1 ||\n          ['A', 'O'].indexOf(token[token.length - 1]) > -1)))) {\n        addSecondary('L', '')\n        pos++\n        return\n      }\n      pos++\n    }\n    add('L')\n  }\n\n  function handleM () {\n    addCompressedDouble('M')\n    if (token[pos - 1] === 'U' && token[pos + 1] === 'B' &&\n      ((pos === token.length - 2 || token.substring(pos + 2, pos + 4) === 'ER'))) { pos++ }\n  }\n\n  function handleP () {\n    if (token[pos + 1] === 'H') {\n      add('F')\n      pos++\n    } else {\n      addCompressedDouble('P')\n      if (token[pos + 1] === 'B') {\n        pos++\n      }\n    }\n  }\n\n  function handleR () {\n    if (pos === token.length - 1 && !slavoGermanic &&\n      token.substring(pos - 2, pos) === 'IE' &&\n      !subMatch(-4, -3, ['ME', 'MA'])) {\n      addSecondary('', 'R')\n    } else {\n      addCompressedDouble('R')\n    }\n  }\n\n  function handleS () {\n    if (pos === 0 && token.substring(0, 5) === 'SUGAR') {\n      addSecondary('X', 'S')\n    } else if (token[pos + 1] === 'H') {\n      if (subMatch(2, 5, ['EIM', 'OEK', 'OLM', 'OLZ'])) {\n        add('S')\n      } else {\n        add('X')\n      }\n      pos++\n    } else if (subMatch(1, 3, ['IO', 'IA'])) {\n      if (slavoGermanic) {\n        add('S')\n      } else {\n        addSecondary('S', 'X')\n      }\n      pos++\n    } else if ((pos === 0 && ['M', 'N', 'L', 'W'].indexOf(token[pos + 1]) > -1) ||\n                token[pos + 1] === 'Z') {\n      addSecondary('S', 'X')\n      if (token[pos + 1] === 'Z') { pos++ }\n    } else if (token.substring(pos, pos + 2) === 'SC') {\n      if (token[pos + 2] === 'H') {\n        if (subMatch(3, 5, ['ER', 'EN'])) {\n          addSecondary('X', 'SK')\n        } else if (subMatch(3, 5, ['OO', 'UY', 'ED', 'EM'])) {\n          add('SK')\n        } else if (pos === 0 && !isVowel(token[3]) && token[3] !== 'W') {\n          addSecondary('X', 'S')\n        } else {\n          add('X')\n        }\n      } else if (['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1) {\n        add('S')\n      } else {\n        add('SK')\n      }\n\n      pos += 2\n    } else if (pos === token.length - 1 &&\n                subMatch(-2, 0, ['AI', 'OI'])) {\n      addSecondary('', 'S')\n    } else if (token[pos + 1] !== 'L' && (\n      token[pos - 1] !== 'A' && token[pos - 1] !== 'I')) {\n      addCompressedDouble('S')\n      if (token[pos + 1] === 'Z') { pos++ }\n    }\n  }\n\n  function handleT () {\n    if (token.substring(pos + 1, pos + 4) === 'ION') {\n      add('XN')\n      pos += 3\n    } else if (subMatch(1, 3, ['IA', 'CH'])) {\n      add('X')\n      pos += 2\n    } else if (token[pos + 1] === 'H' ||\n                token.substring(1, 2) === 'TH') {\n      if (subMatch(2, 4, ['OM', 'AM']) ||\n                    ['VAN ', 'VON '].indexOf(token.substring(0, 4)) > -1 ||\n                    token.substring(0, 3) === 'SCH') {\n        add('T')\n      } else { addSecondary('0', 'T') }\n      pos++\n    } else {\n      addCompressedDouble('T')\n\n      if (token[pos + 1] === 'D') { pos++ }\n    }\n  }\n\n  function handleX () {\n    if (pos === 0) {\n      add('S')\n    } else if (!(pos === token.length - 1 &&\n      (['IAU', 'EAU', 'IEU'].indexOf(token.substring(pos - 3, pos)) > -1 ||\n      ['AU', 'OU'].indexOf(token.substring(pos - 2, pos)) > -1))) {\n      add('KS')\n    }\n  }\n\n  function handleW () {\n    if (pos === 0) {\n      if (token[1] === 'H') {\n        add('A')\n      } else if (isVowel(token[1])) {\n        addSecondary('A', 'F')\n      }\n    } else if (subMatch(-1, 4, ['EWSKI', 'EWSKY', 'OWSKI', 'OWSKY']) ||\n      token.substring(0, 3) === 'SCH' ||\n      (pos === token.length - 1 && isVowel(token[pos - 1]))) {\n      addSecondary('', 'F')\n      pos++\n    } else if (['ICZ', 'ITZ'].indexOf(token.substring(pos + 1, pos + 4)) > -1) {\n      addSecondary('TS', 'FX')\n      pos += 3\n    }\n  }\n\n  function handleZ () {\n    if (token[pos + 1] === 'H') {\n      add('J')\n      pos++\n    } else if (subMatch(1, 3, ['ZO', 'ZI', 'ZA']) ||\n      (slavoGermanic && pos > 0 && token[pos - 1] !== 'T')) {\n      addSecondary('S', 'TS')\n      pos++\n    } else { addCompressedDouble('Z', 'S') }\n  }\n\n  const san = (token.substring(0, 3) === 'SAN')\n  const startsWithVowel = isVowel(token[0])\n  const slavoGermanic = token.match(/(W|K|CZ|WITZ)/)\n\n  if (subMatch(0, 2, ['GN', 'KN', 'PN', 'WR', 'PS'])) {\n    pos++\n  }\n\n  while (pos < token.length) {\n    switch (token[pos]) {\n      case 'A': case 'E': case 'I': case 'O': case 'U': case 'Y':\n      case 'Ê': case 'É': case 'À':\n        if (pos === 0) { add('A') }\n        break\n      case 'B':\n        addCompressedDouble('B', 'P')\n        break\n      case 'C':\n        handleC()\n        break\n      case 'Ç':\n        add('S')\n        break\n      case 'D':\n        handleD()\n        break\n      case 'F': case 'K': case 'N':\n        addCompressedDouble(token[pos])\n        break\n      case 'G':\n        handleG()\n        break\n      case 'H':\n        handleH()\n        break\n      case 'J':\n        handleJ()\n        break\n      case 'L':\n        handleL()\n        break\n      case 'M':\n        handleM()\n        break\n      case 'Ñ':\n        add('N')\n        break\n      case 'P':\n        handleP()\n        break\n      case 'Q':\n        addCompressedDouble('Q', 'K')\n        break\n      case 'R':\n        handleR()\n        break\n      case 'S':\n        handleS()\n        break\n      case 'T':\n        handleT()\n        break\n      case 'V':\n        addCompressedDouble('V', 'F')\n        break\n      case 'W':\n        handleW()\n        break\n      case 'X':\n        handleX()\n        break\n      case 'Z':\n        handleZ()\n        break\n    }\n\n    if (primary.length >= maxLength && secondary.length >= maxLength) {\n      break\n    }\n\n    pos++\n  }\n\n  return [truncate(primary, maxLength), truncate(secondary, maxLength)]\n}\n\nfunction compare (stringA, stringB) {\n  const encodingsA = process(stringA)\n  const encodingsB = process(stringB)\n\n  return encodingsA[0] === encodingsB[0] ||\n    encodingsA[1] === encodingsB[1]\n};\n\nDoubleMetaphone.compare = compare\nDoubleMetaphone.process = process\nDoubleMetaphone.isVowel = isVowel\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}